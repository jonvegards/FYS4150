\relax 
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\newlabel{eq:diff}{{1}{1}}
\@writefile{toc}{\contentsline {paragraph}{Rewriting of differential equation}{1}}
\@writefile{toc}{\contentsline {paragraph}{Checking the given solution}{2}}
\@writefile{lol}{\contentsline {lstlisting}{../num\textunderscore solve.cpp}{3}}
\@writefile{lol}{\contentsline {lstlisting}{../main.cpp}{4}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Maximum error for different $n$ when using LU-decomposition with forward and backward substitution. At $n=10^6$ our program crashes. Also note that the error is decreasing with increasing $n$.}}{4}}
\newlabel{tab:error_max}{{1}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces When $n=10$ the error is constant, this may be a coincidence. The error is quite big anyway, which we also see clearly in fig. \ref  {fig:sol101}.}}{5}}
\newlabel{fig:en101}{{1}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The relative error is for $n=100$ around $\qopname  \relax o{log}_{10}(-3.08)$, which is an expected improvement from $n=10$.}}{6}}
\newlabel{fig:en102}{{2}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Error plot for $n=10^3$}}{6}}
\newlabel{fig:en103}{{3}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Error plot for $n=10^4$}}{7}}
\newlabel{fig:en104}{{4}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Error plot for $n=10^5$. It seems like the numerical precision is decreasing when $n$ is getting too large.}}{7}}
\newlabel{fig:en105}{{5}{7}}
\@writefile{lol}{\contentsline {lstlisting}{../arma\textunderscore solve.cpp}{8}}
\@writefile{lol}{\contentsline {lstlisting}{../main.cpp}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Numerical solution for $n=10$. Armadillo's function `solve' is pretty far off from the exact and the first numerical solution.}}{12}}
\newlabel{fig:sol101}{{6}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Numerical solution for $n=10^2$.}}{13}}
\newlabel{fig:sol102}{{7}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Numerical solution for $n=10^3$.}}{13}}
\newlabel{fig:sol103}{{8}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Numerical solution for $n=10^4$.}}{14}}
\newlabel{fig:sol104}{{9}{14}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Time spent by the different methods used to solve our problem. Something weird happens with the time-function when we set $n=10^4$ cause it didn't take five minutes to run the program on my own computer.}}{14}}
\newlabel{tab:time}{{2}{14}}
\@writefile{lol}{\contentsline {lstlisting}{../lu\textunderscore decomposition.cpp}{15}}
\@writefile{toc}{\contentsline {section}{Python code for plotting}{17}}
\@writefile{lol}{\contentsline {lstlisting}{../plotting\textunderscore results.py}{17}}
